# coding: utf-8

"""
    Coinprofile business API

    Coinprofile business API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class BankAccountVerifyAndReturnDetailsResponseData(BaseModel):
    accountname: typing.Optional[str] = Field(None, alias='accountname')

    accountnumber: typing.Optional[str] = Field(None, alias='accountnumber')

    code: typing.Optional[str] = Field(None, alias='code')

    country: typing.Optional[str] = Field(None, alias='country')

    created_at: typing.Optional[str] = Field(None, alias='created_at')

    currency: typing.Optional[str] = Field(None, alias='currency')

    deleted_at: typing.Optional[str] = Field(None, alias='deleted_at')

    internalreference: typing.Optional[str] = Field(None, alias='internalreference')

    is_trashed: typing.Optional[str] = Field(None, alias='is_trashed')

    is_visible: typing.Optional[str] = Field(None, alias='is_visible')

    name: typing.Optional[str] = Field(None, alias='name')

    phonenumber: typing.Optional[str] = Field(None, alias='phonenumber')

    responsecode: typing.Optional[str] = Field(None, alias='responsecode')

    responsemessage: typing.Optional[str] = Field(None, alias='responsemessage')

    uniquereference: typing.Optional[str] = Field(None, alias='uniquereference')

    updated_at: typing.Optional[str] = Field(None, alias='updated_at')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
