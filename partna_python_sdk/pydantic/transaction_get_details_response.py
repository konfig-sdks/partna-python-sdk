# coding: utf-8

"""
    Coinprofile business API

    Coinprofile business API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class TransactionGetDetailsResponse(BaseModel):
    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    business_id: typing.Optional[str] = Field(None, alias='businessId')

    currency: typing.Optional[str] = Field(None, alias='currency')

    from_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='fromAmount')

    from_currency: typing.Optional[str] = Field(None, alias='fromCurrency')

    is_from_reg_user: typing.Optional[bool] = Field(None, alias='isFromRegUser')

    memo: typing.Optional[str] = Field(None, alias='memo')

    message: typing.Optional[str] = Field(None, alias='message')

    prev_balance: typing.Optional[typing.Union[int, float]] = Field(None, alias='prevBalance')

    sender: typing.Optional[str] = Field(None, alias='sender')

    status: typing.Optional[str] = Field(None, alias='status')

    success: typing.Optional[bool] = Field(None, alias='success')

    transaction_id: typing.Optional[str] = Field(None, alias='transactionId')

    type: typing.Optional[str] = Field(None, alias='type')

    username: typing.Optional[str] = Field(None, alias='username')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
