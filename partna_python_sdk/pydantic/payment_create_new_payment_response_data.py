# coding: utf-8

"""
    Coinprofile business API

    Coinprofile business API

    The version of the OpenAPI document: 1.0.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class PaymentCreateNewPaymentResponseData(BaseModel):
    _id: typing.Optional[str] = Field(None, alias='_id')

    account: typing.Optional[str] = Field(None, alias='account')

    address: typing.Optional[str] = Field(None, alias='address')

    business_id: typing.Optional[str] = Field(None, alias='businessId')

    confirmed_amount: typing.Optional[int] = Field(None, alias='confirmedAmount')

    created_at: typing.Optional[str] = Field(None, alias='createdAt')

    customer_email: typing.Optional[str] = Field(None, alias='customerEmail')

    exp_time: typing.Optional[str] = Field(None, alias='expTime')

    incoming_amount: typing.Optional[int] = Field(None, alias='incomingAmount')

    incoming_currency: typing.Optional[str] = Field(None, alias='incomingCurrency')

    outgoing_amount: typing.Optional[int] = Field(None, alias='outgoingAmount')

    outgoing_currency: typing.Optional[str] = Field(None, alias='outgoingCurrency')

    payment_type: typing.Optional[str] = Field(None, alias='paymentType')

    rate: typing.Optional[int] = Field(None, alias='rate')

    reference: typing.Optional[str] = Field(None, alias='reference')

    sender_username: typing.Optional[str] = Field(None, alias='senderUsername')

    state: typing.Optional[str] = Field(None, alias='state')

    thread_t_s: typing.Optional[str] = Field(None, alias='threadTS')

    unconfirmed_amount: typing.Optional[int] = Field(None, alias='unconfirmedAmount')

    updated_at: typing.Optional[str] = Field(None, alias='updatedAt')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
